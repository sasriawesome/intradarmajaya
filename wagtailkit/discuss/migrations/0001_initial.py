# Generated by Django 2.2.10 on 2020-02-15 14:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import modelcluster.contrib.taggit
import modelcluster.fields
import mptt.fields
import uuid
import wagtail.core.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('wagtaildocs', '0010_document_file_hash'),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('wagtailimages', '0001_squashed_0021'),
    ]

    operations = [
        migrations.CreateModel(
            name='Discussion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Title')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Title')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('summary', wagtail.core.fields.RichTextField(blank=True, max_length=500, null=True, verbose_name='Summary')),
                ('body', wagtail.core.fields.RichTextField(max_length=10000, verbose_name='Body')),
                ('status', models.CharField(choices=[('published', 'Published'), ('unpublished', 'Unpublished'), ('trash', 'Trash')], default='unpublished', max_length=20, verbose_name='Status')),
                ('show_comment', models.BooleanField(default=True, verbose_name='Show comment')),
                ('attachment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='file_attachment', to='wagtaildocs.Document', verbose_name='File attachment')),
            ],
            options={
                'verbose_name': 'Discuss',
                'verbose_name_plural': 'Discusses',
                'ordering': ['-date_created'],
                'permissions': (('changeother_discussion', 'Can change other Discussion'), ('deleteother_discussion', 'Can delete other Discussion')),
            },
        ),
        migrations.CreateModel(
            name='DiscussionTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_discussions', to='discuss.Discussion')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discuss_discussiontag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DiscussionGalleryImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('caption', models.CharField(blank=True, max_length=250)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.Image')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='discuss.Discussion')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DiscussionCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125, verbose_name='Name')),
                ('description', models.TextField(blank=True, max_length=255, null=True, verbose_name='Description')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='discuss.DiscussionCategory', verbose_name='Parent')),
            ],
            options={
                'verbose_name': 'Discussion Category',
                'verbose_name_plural': 'Discussion Categories',
            },
        ),
        migrations.AddField(
            model_name='discussion',
            name='category',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='discuss.DiscussionCategory', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='discussion',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creator'),
        ),
        migrations.AddField(
            model_name='discussion',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='discuss.DiscussionTag', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
