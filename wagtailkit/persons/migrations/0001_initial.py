# Generated by Django 2.2.8 on 2020-02-14 06:03

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import modelcluster.fields
import uuid
import wagtail.search.index
import wagtailkit.persons.models.extra


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtaildocs', '0010_document_file_hash'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('wagtailcore', '0045_assign_unlock_grouppagepermission'),
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date created')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('reg_number', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='Register number')),
                ('inner_id', models.CharField(blank=True, editable=False, max_length=50, null=True, unique=True, verbose_name='Inner ID')),
                ('phone1', models.CharField(blank=True, max_length=128, null=True, verbose_name='Phone 1')),
                ('fax', models.CharField(blank=True, max_length=128, null=True, verbose_name='Fax')),
                ('whatsapp', models.CharField(blank=True, max_length=128, null=True, verbose_name='Whatsapp')),
                ('email', models.EmailField(blank=True, max_length=128, null=True, verbose_name='Email')),
                ('website', models.CharField(blank=True, max_length=128, null=True, verbose_name='Website')),
                ('show_title', models.BooleanField(default=False, help_text='Show Mr or Mrs in front of name', verbose_name='Show title')),
                ('show_name_only', models.BooleanField(default=False, help_text='Show name only without academic title', verbose_name='Show name only')),
                ('title', models.CharField(blank=True, max_length=256, null=True, verbose_name='Title')),
                ('fullname', models.CharField(max_length=256, verbose_name='Full name')),
                ('nickname', models.CharField(blank=True, max_length=256, null=True, verbose_name='Nick name')),
                ('front_title', models.CharField(blank=True, help_text='Academic title prefix, eg: Dr or Prof. Dr', max_length=256, null=True, verbose_name='Front title')),
                ('back_title', models.CharField(blank=True, help_text='Academic title suffix, eg: Phd', max_length=256, null=True, verbose_name='Back title')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='M', max_length=1, verbose_name='Gender')),
                ('religion', models.CharField(blank=True, max_length=255, null=True, verbose_name='Religion')),
                ('nation', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nation')),
                ('date_of_birth', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Date of birth')),
                ('place_of_birth', models.CharField(blank=True, max_length=255, null=True, verbose_name='Place of birth')),
                ('last_education_level', models.CharField(choices=[('0', 'SD'), ('1', 'SMP'), ('2', 'SMA'), ('3', 'D1'), ('4', 'D2'), ('5', 'D3'), ('6', 'D4'), ('7', 'S1'), ('8', 'S2'), ('9', 'S3')], default='2', max_length=5, verbose_name='Edu Level')),
                ('last_education_name', models.CharField(max_length=256, null=True, verbose_name='Edu Name')),
                ('facebook', models.URLField(blank=True, help_text='Facebook page URL', null=True)),
                ('twitter', models.CharField(blank=True, help_text='twitter username, without the @', max_length=255, null=True)),
                ('instagram', models.CharField(blank=True, help_text='Instagram username, without the @', max_length=255, null=True)),
                ('youtube', models.URLField(blank=True, help_text='YouTube channel or user account URL', null=True)),
                ('is_employee_applicant', models.BooleanField(default=False, verbose_name='Employee applicant')),
                ('is_partner_applicant', models.BooleanField(default=False, verbose_name='Partner applicant')),
                ('is_matriculant', models.BooleanField(default=False, verbose_name='Matriculant')),
                ('user_account', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User account')),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Persons',
                'permissions': (('export_person', 'Can export Person'), ('import_person', 'Can import Person'), ('change_status_person', 'Can change status Person')),
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name='Working',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date created')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('institution_name', models.CharField(max_length=256, verbose_name='Institution')),
                ('department', models.CharField(max_length=256, verbose_name='Department')),
                ('position', models.CharField(max_length=256, verbose_name='Position')),
                ('description', models.TextField(blank=True, max_length=256, null=True, verbose_name='Description')),
                ('date_start', models.DateField(default=django.utils.timezone.now, verbose_name='Date start')),
                ('date_end', models.DateField(default=django.utils.timezone.now, verbose_name='Date end')),
                ('status', models.CharField(choices=[('CTR', 'Contract'), ('FXD', 'Fixed'), ('OSR', 'Outsource')], default='CTR', max_length=3, verbose_name='Employment')),
                ('attachment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wagtaildocs.Document')),
                ('person', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='working_histories', to='persons.Person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Working',
                'verbose_name_plural': 'Workings',
            },
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date created')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('organization', models.CharField(max_length=256, verbose_name='Organization')),
                ('position', models.CharField(max_length=256, verbose_name='Position')),
                ('description', models.CharField(max_length=256, verbose_name='Description')),
                ('date_start', models.DateField(default=django.utils.timezone.now, verbose_name='Date start')),
                ('date_end', models.DateField(default=django.utils.timezone.now, verbose_name='Date end')),
                ('status', models.CharField(choices=[('ACT', 'Active'), ('INC', 'Inactive')], default='ACT', max_length=3, verbose_name='Status')),
                ('attachment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wagtaildocs.Document')),
                ('person', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_histories', to='persons.Person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Volunteer',
                'verbose_name_plural': 'Volunteers',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date created')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=256, null=True, verbose_name='Description')),
                ('level', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Skill level')),
                ('person', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_sets', to='persons.Person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Skill',
                'verbose_name_plural': 'Skills',
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date created')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('title', models.CharField(max_length=256, verbose_name='Title')),
                ('description', models.CharField(blank=True, max_length=256, null=True, verbose_name='Description')),
                ('publisher', models.CharField(blank=True, max_length=256, null=True, verbose_name='Publisher')),
                ('date_published', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Published date')),
                ('permalink', models.URLField(blank=True, null=True, verbose_name='URL')),
                ('attachment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wagtaildocs.Document')),
                ('person', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='publications', to='persons.Person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Publication',
                'verbose_name_plural': 'Publications',
            },
        ),
        migrations.CreateModel(
            name='PersonSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_histories_tab', models.BooleanField(default=True, help_text='Show formal person histories tab', verbose_name='Show histories tab')),
                ('show_formal_education_history', models.BooleanField(default=True, help_text='Show formal education histories panel', verbose_name='Show formal education')),
                ('show_nonformal_education_history', models.BooleanField(default=True, help_text='Show non formal education histories panel', verbose_name='Show non formal education')),
                ('show_working_history', models.BooleanField(default=True, help_text='Show working histories panel', verbose_name='Show working experience')),
                ('show_organization_history', models.BooleanField(default=True, help_text='Show organization histories panel', verbose_name='Show organization experience')),
                ('show_skill', models.BooleanField(default=True, help_text='Show skills panel', verbose_name='Show skill')),
                ('show_award', models.BooleanField(default=True, help_text='Show awards panel', verbose_name='Show award')),
                ('show_publication', models.BooleanField(default=True, help_text='Show publications panel', verbose_name='Show publication')),
                ('show_family', models.BooleanField(default=True, help_text='Show family or relationship tab', verbose_name='Show family tab')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.Site')),
            ],
            options={
                'verbose_name': 'Person Setting',
                'verbose_name_plural': 'Person Settings',
            },
        ),
        migrations.CreateModel(
            name='PersonAddress',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date created')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('street1', models.CharField(blank=True, max_length=512, null=True, verbose_name='Address 1')),
                ('street2', models.CharField(blank=True, max_length=512, null=True, verbose_name='Address 2')),
                ('city', models.CharField(blank=True, max_length=128, null=True, verbose_name='City')),
                ('province', models.CharField(blank=True, max_length=128, null=True, verbose_name='Province')),
                ('country', models.CharField(blank=True, max_length=128, null=True, verbose_name='Country')),
                ('zipcode', models.CharField(blank=True, max_length=128, null=True, verbose_name='Zip Code')),
                ('is_primary', models.BooleanField(default=True, verbose_name='Primary')),
                ('name', models.CharField(help_text='E.g. Home Address or Office Address', max_length=256, null=True, verbose_name='Name')),
                ('person', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='address', to='persons.Person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Address',
            },
        ),
        migrations.CreateModel(
            name='NonFormalEducation',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date created')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('institution_name', models.CharField(max_length=256, verbose_name='Institution')),
                ('description', models.CharField(blank=True, max_length=256, null=True, verbose_name='Description')),
                ('date_start', models.DateField(default=django.utils.timezone.now, verbose_name='Date start')),
                ('date_end', models.DateField(default=django.utils.timezone.now, verbose_name='Date end')),
                ('status', models.CharField(choices=[('FNS', 'Finished'), ('ONG', 'Ongoing'), ('UNF', 'Unfinished')], default='FNS', max_length=3, verbose_name='Current status')),
                ('attachment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wagtaildocs.Document')),
                ('person', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='nonformaleducation_histories', to='persons.Person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Non Formal Education',
                'verbose_name_plural': 'Non Formal Educations',
            },
        ),
        migrations.CreateModel(
            name='FormalEducation',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date created')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('level', models.CharField(choices=[('0', 'SD'), ('1', 'SMP'), ('2', 'SMA'), ('3', 'D1'), ('4', 'D2'), ('5', 'D3'), ('6', 'D4'), ('7', 'S1'), ('8', 'S2'), ('9', 'S3')], default=wagtailkit.persons.models.extra.KKNILevel('7'), max_length=3, verbose_name='Level')),
                ('institution_name', models.CharField(max_length=256, verbose_name='Institution')),
                ('major', models.CharField(blank=True, help_text='ex: IPA, IPS, Information System or Accounting', max_length=256, null=True, verbose_name='Major')),
                ('date_start', models.DateField(default=django.utils.timezone.now, verbose_name='Date start')),
                ('date_end', models.DateField(default=django.utils.timezone.now, verbose_name='Date end')),
                ('status', models.CharField(choices=[('FNS', 'Finished'), ('ONG', 'Ongoing'), ('UNF', 'Unfinished')], default='FNS', max_length=3, verbose_name='Current status')),
                ('attachment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wagtaildocs.Document')),
                ('person', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='education_histories', to='persons.Person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Formal Education',
                'verbose_name_plural': 'Formal Educations',
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date created')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('relation', models.CharField(choices=[('1', 'Father'), ('2', 'Mother'), ('3', 'Sibling'), ('4', 'Children'), ('99', 'Other')], default='99', max_length=256, verbose_name='relation')),
                ('relationship', models.CharField(blank=True, max_length=256, null=True, verbose_name='Relationship')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('date_of_birth', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Date of birth')),
                ('place_of_birth', models.CharField(blank=True, max_length=255, null=True, verbose_name='Place of birth')),
                ('job', models.CharField(max_length=256, verbose_name='Job')),
                ('address', models.TextField(blank=True, max_length=512, null=True, verbose_name='Address')),
                ('person', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='families', to='persons.Person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Family',
                'verbose_name_plural': 'Families',
            },
        ),
        migrations.CreateModel(
            name='Award',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date created')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=256, null=True, verbose_name='Description')),
                ('date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Created date')),
                ('attachment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wagtaildocs.Document')),
                ('person', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='awards', to='persons.Person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Award',
                'verbose_name_plural': 'Awards',
            },
        ),
    ]
