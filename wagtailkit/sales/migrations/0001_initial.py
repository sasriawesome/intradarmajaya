# Generated by Django 2.2.8 on 2020-01-29 21:21

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import modelcluster.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('products', '0001_initial'),
        ('partners', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='OrderType',
            fields=[
                ('code', models.CharField(max_length=5, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=256, verbose_name='name')),
            ],
            options={
                'verbose_name': 'Order Type',
                'verbose_name_plural': 'Order Types',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date created')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date modified')),
                ('status', models.CharField(choices=[('trash', 'Trash'), ('draft', 'Draft'), ('valid', 'Valid'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('process', 'Process'), ('complete', 'Complete'), ('closed', 'Closed')], default='draft', editable=False, max_length=15, verbose_name='Status')),
                ('reg_number', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='Register number')),
                ('inner_id', models.CharField(blank=True, editable=False, max_length=50, null=True, unique=True, verbose_name='Inner ID')),
                ('is_specific', models.BooleanField(default=False, editable=False, help_text='Group product order by order type', verbose_name='Is specific')),
                ('customer_po', models.CharField(blank=True, max_length=256, null=True, verbose_name='Customer PO')),
                ('note', models.CharField(blank=True, max_length=512, null=True, verbose_name='Note')),
                ('total_order', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Total Order')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, help_text='Discount in percent', max_digits=15, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Discount')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Total discount')),
                ('grand_total', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Grand Total')),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='partners.Customer', verbose_name='Customer')),
                ('order_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='sales.OrderType', verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'permissions': (('draft_order', 'Can draft Order'), ('trash_order', 'Can trash Order'), ('validate_order', 'Can validate Order'), ('process_order', 'Can process Order'), ('complete_order', 'Can complete Order'), ('invoice_order', 'Can invoice Order'), ('close_order', 'Can close Order')),
            },
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date created')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Date modified')),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Product price')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1, message='Minimal value: 1'), django.core.validators.MaxValueValidator(500, message='Maximal value: 500')], verbose_name='Quantity')),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Total Price')),
                ('order', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_products', to='sales.Order', verbose_name='Order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='products.Product')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
                'ordering': ('product',),
                'unique_together': {('order', 'product')},
            },
        ),
    ]
